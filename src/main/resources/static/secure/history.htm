<!DOCTYPE html>
<html>
    <head>
        <style>
            table {
              border-spacing: 0;
              width: 100%;
              border: 1px solid #ddd;
            }
            
            th {
              cursor: pointer;
            }
            
            th, td {
              text-align: left;
              padding: 16px;
            }
            
            tr:nth-child(even) {
              background-color: #f2f2f2
            }
            </style>
    </head>
    <body onload=request()>
        <h1>Transaction History:</h1>
        <div id="table"></div>
        
        <br>
        <button onclick="document.location='overview.htm'">Back to Account Overview</button>
        <br>
        <button onclick="document.location='../login.htm'">Log Out</button>

        <script>
            function request() {
                var myObj, txt = "";
                var xhttp = new XMLHttpRequest();
                xhttp.onreadystatechange = function() {
                    if (this.readyState == 4 && this.status == 200) {
                        myObj = JSON.parse(this.responseText);
                        txt += "<table id='theTable'><tr><th onclick='sortTable(3)'>Sender</th><th onclick='sortTable(3)'>Reciever</th><th onclick='sortTable(3)'>Amount</th><th onclick='sortTable(3)'>Date</th><th onclick='sortTable(4)'>Memo</th></tr>"
                        for (x in myObj) {
                            txt += "<tr><td>" + myObj[x].sid + "</td>";
                            txt += "<td>" + myObj[x].rid + "</td>";
                            txt += "<td>" + myObj[x].amount + "</td>";
                            txt += "<td>" + myObj[x].date + "</td>";
                            txt += "<td>" + myObj[x].memo + "</td></tr>";
                        }
                        txt += "</table>"
                        document.getElementById("table").innerHTML = txt;
                    }
                };
                xhttp.open("GET", "/controller/history", true);
                xhttp.send();
            }

            // courtesy of w3schools
            function sortTable(n) {
                var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
                table = document.getElementById("theTable");
                switching = true;
                //Set the sorting direction to ascending:
                dir = "asc"; 
                /*Make a loop that will continue until
                no switching has been done:*/
                while (switching) {
                    //start by saying: no switching is done:
                    switching = false;
                    rows = table.rows;
                    /*Loop through all table rows (except the
                    first, which contains table headers):*/
                    for (i = 1; i < (rows.length - 1); i++) {
                        //start by saying there should be no switching:
                        shouldSwitch = false;
                        /*Get the two elements you want to compare,
                        one from current row and one from the next:*/
                        x = rows[i].getElementsByTagName("TD")[n];
                        y = rows[i + 1].getElementsByTagName("TD")[n];
                        /*check if the two rows should switch place,
                        based on the direction, asc or desc:*/
                        if (dir == "asc") {
                            if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                                //if so, mark as a switch and break the loop:
                                shouldSwitch= true;
                                break;
                            }
                        } else if (dir == "desc") {
                            if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                                //if so, mark as a switch and break the loop:
                                shouldSwitch = true;
                                break;
                            }
                        }
                    }
                    if (shouldSwitch) {
                        /*If a switch has been marked, make the switch
                        and mark that a switch has been done:*/
                        rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                        switching = true;
                        //Each time a switch is done, increase this count by 1:
                        switchcount ++;      
                    } else {
                        /*If no switching has been done AND the direction is "asc",
                        set the direction to "desc" and run the while loop again.*/
                        if (switchcount == 0 && dir == "asc") {
                            dir = "desc";
                            switching = true;
                        }
                    }
                }
            }
        </script>
    </body>
</html>

<!--- todo:
transactions should probably go to user's perferred account, so other users
    can't snoop on someone else's bank accounts
login checker
will probably be a JS table, to easily sort by field attributes
change account button, to see history of another bank account
--->
